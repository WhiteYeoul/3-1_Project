#! /usr/bin/env python
# -*- encoding: utf-8 -*-

import rospy
from std_msgs.msg import String
import rospkg
import os
import subprocess
import time
from urdf_parser_py.urdf import URDF
from xacro import process_file


class ModuleLoader:
    def __init__(self):
        self.rospack = rospkg.RosPack()
        self.urdf_file = self.rospack.get_path(
            'your_robot_description') + '/urdf/your_robot.urdf.xacro'
        rospy.init_node('module_loader', anonymous=True)
        rospy.Subscriber('module_topic', String, self.callback)
        rospy.loginfo("Module Loader 노드를 시작합니다.")

    def callback(self, data):
        module_name = data.data
        if module_name == '1' or module_name == '2':
            self.load_module(module_name)
        else:
            rospy.loginfo("Wrong message")

    def load_module(self, module_name):
        # 새로운 모듈의 xacro 모델 파일을 로드합니다.
        module_file = self.rospack.get_path(
            'your_robot_description') + '/urdf/modules/' + module_name + '.xacro'
        module_str = process_file(module_file)
        module_urdf = URDF.from_xml_string(module_str)
        rospy.loginfo("새로운 모듈을 로드합니다.")
        time.sleep(1)

        # 기존 로봇 모델의 xacro 모델 파일에서 삭제할 모듈의 joint를 찾아 삭제합니다.
        # 이전에 장착된 모듈의 xacro 모델 파일을 로드하고 삭제합니다.
        with open(self.urdf_file, 'r') as f:
            urdf_str = f.read()
        urdf_str = urdf_str.replace(
            '<xacro:include file="$(find your_robot_description)/urdf/modules/'+module_name+'.urdf.xacro"/>', '')
        urdf_urdf = URDF.from_xml_string(urdf_str)
        rospy.loginfo("이전 모듈이 삭제됩니다.")
        time.sleep(1)

        # 새로운 모듈을 추가합니다.
        urdf_urdf.links.extend(module_urdf.links)
        urdf_urdf.joints.extend(module_urdf.joints)

        # robot_state_publisher를 사용해서 로봇 모델을 업데이트합니다.
        with open(self.urdf_file, 'w') as f:
            f.write(urdf_urdf.to_xml_string())
        subprocess.call(['rosrun', 'robot_state_publisher', 'robot_state_publisher',
                        '__name:=your_robot_description', 'robot_description:=/your_robot_description/robot_description'])
        rospy.loginfo("새로운 모듈이 업데이트되었습니다.")


if __name__ == '__main__':
    l = ModuleLoader()
    rospy.spin()
