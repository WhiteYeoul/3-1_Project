#!/usr/bin/env python

import rospy
import math
import subprocess

from std_msgs.msg import Int32
from nav_msgs.msg import OccupancyGrid
from geometry_msgs.msg import PoseWithCovarianceStamped

class MapLoader:
    def __init__(self):
        self.map_path = ""
        self.map_pub = rospy.Publisher("/initialpose", PoseWithCovarianceStamped, queue_size=10)
        self.map_chn = rospy.Subscriber("/map_change", Int32, self.map_change_callback)
        rospy.init_node("map_loader")


    def load_map(self):
        subprocess.Popen(["rosrun", "map_server", "map_server", self.map_path])

    def set_initial_pose(self, x, y, z, w):
        initial_pose = PoseWithCovarianceStamped()
        initial_pose.header.frame_id = "map"
        initial_pose.pose.pose.position.x = x
        initial_pose.pose.pose.position.y = y
        initial_pose.pose.pose.orientation.z = z
        initial_pose.pose.pose.orientation.w = w
        initial_pose.pose.covariance[6*0+0] = 0.5 * 0.5
        initial_pose.pose.covariance[6*1+1] = 0.5 * 0.5
        initial_pose.pose.covariance[6*5+5] = (math.pi/12.0) * (math.pi/12.0)
        return initial_pose

    def map_change_callback(self, msg):
        if msg.data == 1:
            self.map_path = "/home/hyun/project3/src/DMU_3-1_Project/navigation/maps/mca.yaml"
            self.load_map()
            rospy.sleep(0.5)
            pose1 = self.set_initial_pose(1.81991589069, 0.809644460678,-0.851503633761, 0.524348702383)
            self.map_pub.publish(pose1)
            rospy.loginfo("Setting initial pose to: {}".format(pose1))
        elif msg.data == 2:
            self.map_path = "/home/hyun/project3/src/DMU_3-1_Project/navigation/maps/fifth.yaml"
            self.load_map()
            rospy.sleep(0.5)
            pose2 = self.set_initial_pose(-3.61526370049, -0.675316214561, 0.458776213223, 0.888551847773)
            self.map_pub.publish(pose2)
            rospy.loginfo("Setting initial pose to: {}".format(pose2))
        else:
            rospy.logwarn("Invalid map_change message received")

if __name__ == "__main__":
    l = MapLoader()
    rospy.loginfo("Load map ON")
    rospy.spin()
